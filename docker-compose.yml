services:
  spire-ca-generator:
    image: alpine/openssl:latest
    volumes:
      - ./spire/ca:/ca
    command: [ "req",
               "-subj", "/C=/ST=/L=/O=/CN=example.org",
               "-newkey", "rsa:2048",
               "-nodes",
               "-keyout", "/ca/root.key",
               "-x509",
               "-days", "365",
               "-out", "/ca/root.crt" ]
    networks:
      - spire-network

  # SPIRE Server
  spire-server:
    depends_on:
      - spire-ca-generator
    image: ghcr.io/spiffe/spire-server:1.12.4
    hostname: spire-server
    volumes:
      - ./spire/server/server.conf:/opt/spire/conf/server/server.conf
      - ./spire/server/data:/opt/spire/data/server
      - ./spire/ca:/opt/spire/conf/server/ca:ro
      - spire-server-socket:/tmp/spire-server/private
    healthcheck:
      test: [ "CMD", "spire-server", "healthcheck", "-socketPath", "/tmp/spire-server/private/api.sock" ]
      interval: 5s
      timeout: 5s
      retries: 3
    networks:
      - spire-network

  # SPIRE Agent
  spire-agent:
    image: ghcr.io/spiffe/spire-agent:1.12.4
    hostname: spire-agent
    depends_on:
      - spire-server
    volumes:
      - ./spire/agent/agent.conf:/opt/spire/conf/agent/agent.conf
      - ./spire/agent/data:/opt/spire/data/agent
      - ./spire/ca:/opt/spire/conf/server/ca:ro
      - spire-agent-socket:/tmp/spire-agent/public
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - spire-network

  # SPIRE Registration
  spire-registrar:
    image: ghcr.io/spiffe/spire-server:1.12.4
    depends_on:
      - spire-server
      - spire-agent
    volumes:
      - ./spire/register_entries.sh:/opt/spire/register_entries.sh
      - spire-server-socket:/tmp/spire-server/private
    command: [ "sh", "/opt/spire/register_entries.sh" ]
    networks:
      - spire-network

  # OPA Service
  opa:
    image: openpolicyagent/opa:latest
    hostname: opa
    volumes:
      - ./opa:/opt/opa
    command: [ "run", "--server", "--config-file", "/opt/opa/config.yaml", "/opt/opa/policy.rego" ]
    networks:
      - spire-network

  # User API Service
  user-service:
    build:
      context: .
      dockerfile: ./app/user-service/Dockerfile
    hostname: user-service
    environment:
      - PORT=8000
    networks:
      - spire-network
    labels:
      app: user-service

  # Envoy Proxy for Server Side
  envoy-server:
    image: envoyproxy/envoy:v1.33-latest
    hostname: envoy-server
    depends_on:
      - user-service
      - opa
      - spire-agent
    volumes:
      - ./envoy/server:/etc/envoy
      - spire-agent-socket:/tmp/spire-agent/public
    command: [ "--config-path", "/etc/envoy/envoy.yaml" ]
    networks:
      - spire-network
    labels:
      app: user-service

  # Envoy Proxy for Agent Side
  envoy-agent:
    image: envoyproxy/envoy:v1.33-latest
    hostname: envoy-agent
    depends_on:
      - envoy-server
      - spire-agent
    volumes:
      - ./envoy/agent:/etc/envoy
      - spire-agent-socket:/tmp/spire-agent/public
    command: [ "--config-path", "/etc/envoy/envoy.yaml" ]
    ports:
      - "9090:9090"  # Expose the agent-side Envoy proxy
      - "9901:9901"  # Expose the admin interface
    networks:
      - spire-network
    labels:
      app: llm-agent

  # LLM Agent
  llm-agent:
    build:
      context: .
      dockerfile: ./app/llm-agent/Dockerfile
    hostname: llm-agent
    depends_on:
      - envoy-agent
    environment:
      - API_BASE_URL=http://user-service:8000
    networks:
      - spire-network
    labels:
      app: llm-agent

networks:
  spire-network:
    driver: bridge

volumes:
  spire-server-socket:
  spire-agent-socket: